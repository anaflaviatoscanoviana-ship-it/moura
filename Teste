import numpy as np
from scipy.integrate import cumulative_trapezoid
import matplotlib.pyplot as plt
from datetime import datetime
import re

# --- 1. Seus dados originais (tensão vs. tempo) ---
dados_originais_brutos = """
2025-09-03 12:50:53.200, 2.184296
2025-09-03 12:50:53.201, 3.842163
2025-09-03 12:50:53.202, 4.151917
2025-09-03 12:50:53.203, 4.303436
2025-09-03 12:50:53.204, 4.491882
2025-09-03 12:50:53.205, 4.723358
2025-09-03 12:50:53.206, 6.793060
2025-09-03 12:50:53.207, 5.318909
2025-09-03 12:50:53.208, 6.365814
2025-09-03 12:50:53.209, 4.280701
2025-09-03 12:50:53.210, 5.127106
2025-09-03 12:50:53.211, 4.684448
2025-09-03 12:50:53.212, 4.906311
2025-09-03 12:50:53.213, 4.853210
2025-09-03 12:50:53.214, 5.162659
2025-09-03 12:50:53.215, 4.335175
2025-09-03 12:50:53.216, 4.629364
2025-09-03 12:50:53.217, 3.862305
2025-09-03 12:50:53.218, 4.241486
2025-09-03 12:50:53.219, 4.292755
2025-09-03 12:50:53.220, 5.043640
2025-09-03 12:50:53.221, 4.658661
2025-09-03 12:50:53.222, 4.683533
2025-09-03 12:50:53.223, 4.489136
2025-09-03 12:50:53.224, 4.578247
2025-09-03 12:50:53.225, 4.481964
2025-09-03 12:50:53.226, 4.328766
2025-09-03 12:50:53.227, 4.670105
2025-09-03 12:50:53.228, 4.522858
2025-09-03 12:50:53.229, 4.344025
2025-09-03 12:50:53.230, 4.322052
2025-09-03 12:50:53.231, 4.349823
2025-09-03 12:50:53.232, 4.428101
2025-09-03 12:50:53.233, 4.449310
2025-09-03 12:50:53.234, 4.366760
2025-09-03 12:50:53.235, 4.296417
2025-09-03 12:50:53.236, 4.293518
2025-09-03 12:50:53.237, 4.282074
2025-09-03 12:50:53.238, 4.318848
2025-09-03 12:50:53.239, 4.294281
2025-09-03 12:50:53.240, 4.257050
2025-09-03 12:50:53.241, 4.311066
2025-09-03 12:50:53.242, 4.270782
2025-09-03 12:50:53.243, 4.266052
2025-09-03 12:50:53.244, 4.289093
2025-09-03 12:50:53.245, 4.244995
2025-09-03 12:50:53.246, 4.283142
2025-09-03 12:50:53.247, 4.297943
2025-09-03 12:50:53.248, 4.252777
2025-09-03 12:50:53.249, 4.291534
2025-09-03 12:50:53.250, 4.273224
2025-09-03 12:50:53.251, 4.237823
2025-09-03 12:50:53.252, 4.275055
2025-09-03 12:50:53.253, 4.234009
2025-09-03 12:50:53.254, 4.239807
2025-09-03 12:50:53.255, 4.292908
2025-09-03 12:50:53.256, 4.247742
2025-09-03 12:50:53.257, 4.261932
2025-09-03 12:50:53.258, 4.281921
2025-09-03 12:50:53.259, 4.230499
2025-09-03 12:50:53.260, 4.248199
2025-09-03 12:50:53.261, 4.236908
2025-09-03 12:50:53.262, 4.199066
2025-09-03 12:50:53.263, 4.266510
2025-09-03 12:50:53.264, 4.251709
2025-09-03 12:50:53.265, 4.222565
2025-09-03 12:50:53.266, 4.263916
2025-09-03 12:50:53.267, 4.216309
2025-09-03 12:50:53.268, 4.210663
2025-09-03 12:50:53.269, 4.235992
2025-09-03 12:50:53.270, 4.188080
2025-09-03 12:50:53.271, 4.227295
2025-09-03 12:50:53.272, 4.244537
2025-09-03 12:50:53.273, 4.203491
2025-09-03 12:50:53.274, 4.248047
2025-09-03 12:50:53.275, 4.232330
2025-09-03 12:50:53.276, 4.194183
2025-09-03 12:50:53.277, 4.232330
2025-09-03 12:50:53.278, 4.189453
2025-09-03 12:50:53.279, 4.190369
2025-09-03 12:50:53.280, 4.243011
2025-09-03 12:50:53.281, 4.196472
2025-09-03 12:50:53.282, 4.217682
2025-09-03 12:50:53.283, 4.242096
2025-09-03 12:50:53.284, 4.191132
2025-09-03 12:50:53.285, 4.213104
2025-09-03 12:50:53.286, 4.205322
2025-09-03 12:50:53.287, 4.172974
2025-09-03 12:50:53.288, 4.234467
2025-09-03 12:50:53.289, 4.211884
2025-09-03 12:50:53.290, 4.198151
2025-09-03 12:50:53.291, 4.245453
2025-09-03 12:50:53.292, 4.196625
2025-09-03 12:50:53.293, 4.188080
2025-09-03 12:50:53.294, 4.211273
2025-09-03 12:50:53.295, 4.165344
2025-09-03 12:50:53.296, 4.200439
2025-09-03 12:50:53.297, 4.220734
2025-09-03 12:50:53.298, 4.178162
2025-09-03 12:50:53.299, 4.228973
2025-09-03 12:50:53.300, 2.518616
2025-09-03 12:50:53.301, 1.731873
2025-09-03 12:50:53.302, 1.292725
"""

# --- 2. Seus novos dados (corrente vs. tempo) ---
novos_dados_brutos = """
1ms,*, 1.83kA, 0.25V
2ms,*, 3.67kA, 0.47V
3ms,*, 4.92kA, 0.58V
4ms,*, 5.84kA, 0.63V
5ms,*, 6.62kA, 0.68V
6ms,*, 7.17kA, 0.72V
7ms,*, 7.56kA, 0.76V
8ms,*, 7.88kA, 0.81V
9ms,*, 8.05kA, 0.85V
10ms,*, 8.19kA, 0.90V
11ms,*, 8.35kA, 0.94V
12ms,*, 8.34kA, 1.01V
13ms,*, 8.27kA, 1.09V
14ms,*, 8.04kA, 1.27V
15ms,*, 7.87kA, 1.16V
16ms,*, 7.86kA, 1.12V
17ms,*, 7.86kA, 1.10V
18ms,*, 7.88kA, 1.07V
19ms,*, 8.00kA, 1.08V
20ms,*, 8.12kA, 1.01V
21ms,*, 8.23kA, 0.98V
22ms,*, 8.45kA, 0.94V
23ms,*, 8.59kA, 0.89V
24ms,*, 8.74kA, 0.87V
25ms,*, 8.95kA, 0.83V
26ms,*, 9.04kA, 0.82V
27ms,*, 9.24kA, 0.80V
28ms,*, 9.47kA, 0.76V
29ms,*, 9.65kA, 0.71V
30ms,*, 9.89kA, 0.69V
31ms,*,10.05kA, 0.68V
32ms,*,10.15kA, 0.66V
33ms,*,10.32kA, 0.65V
34ms,*,10.42kA, 0.64V
35ms,*,10.53kA, 0.63V
36ms,*,10.71kA, 0.64V
37ms,*,10.77kA, 0.64V
38ms,*,10.84kA, 0.64V
39ms,*,10.93kA, 0.65V
40ms,*,10.92kA, 0.64V
41ms,*,10.96kA, 0.64V
42ms,*,10.98kA, 0.64V
43ms,*,10.98kA, 0.64V
44ms,*,11.08kA, 0.65V
45ms,*,11.12kA, 0.65V
46ms,*,11.12kA, 0.64V
47ms,*,11.20kA, 0.64V
48ms,*,11.17kA, 0.64V
49ms,*,11.16kA, 0.64V
50ms,*,11.19kA, 0.64V
51ms,*,11.14kA, 0.64V
52ms,*,11.19kA, 0.64V
53ms,*,11.26kA, 0.64V
54ms,*,11.23kA, 0.64V
55ms,*,11.29kA, 0.64V
56ms,*,11.30kA, 0.63V
57ms,*,11.26kA, 0.62V
58ms,*,11.32kA, 0.62V
59ms,*,11.28kA, 0.62V
60ms,*,11.30kA, 0.62V
61ms,*,11.40kA, 0.62V
62ms,*,11.39kA, 0.62V
63ms,*,11.41kA, 0.62V
64ms,*,11.46kA, 0.63V
65ms,*,11.40kA, 0.62V
66ms,*,11.41kA, 0.62V
67ms,*,11.40kA, 0.62V
68ms,*,11.35kA, 0.62V
69ms,*,11.44kA, 0.62V
70ms,*,11.45kA, 0.62V
71ms,*,11.43kA, 0.62V
72ms,*,11.50kA, 0.62V
73ms,*,11.45kA, 0.62V
74ms,*,11.43kA, 0.62V
75ms,*,11.45kA, 0.62V
76ms,*,11.39kA, 0.61V
77ms,*,11.43kA, 0.62V
78ms,*,11.49kA, 0.62V
79ms,*,11.46kA, 0.62V
80ms,*,11.50kA, 0.62V
81ms,*,11.51kA, 0.62V
82ms,*,11.45kA, 0.61V
83ms,*,11.48kA, 0.62V
84ms,*,11.43kA, 0.61V
85ms,*,11.43kA, 0.62V
86ms,*,11.53kA, 0.62V
87ms,*,11.49kA, 0.62V
88ms,*,11.50kA, 0.62V
89ms,*,11.54kA, 0.62V
90ms,*,11.47kA, 0.62V
91ms,*,11.49kA, 0.62V
92ms,*,11.47kA, 0.62V
93ms,*,11.43kA, 0.61V
94ms,*,11.51kA, 0.62V
95ms,*,11.53kA, 0.62V
96ms,*,11.50kA, 0.62V
97ms,*,11.55kA, 0.62V
98ms,*,11.51kA, 0.62V
99ms,*,11.47kA, 0.62V
100ms,*,11.49kA, 0.62V
"""

# --- Processamento dos dados originais ---
timestamps, tensoes_originais = [], []
for linha in dados_originais_brutos.strip().split('\n'):
    timestamp_str, tensao_str = linha.split(', ')
    timestamps.append(datetime.strptime(timestamp_str, '%Y-%m-%d %H:%M:%S.%f'))
    tensoes_originais.append(float(tensao_str))

t_inicial = timestamps[0]
tempos_segundos_originais = np.array([(t - t_inicial).total_seconds() for t in timestamps])
tensoes_volts_originais = np.array(tensoes_originais)

# --- Cálculo da integral dos dados originais ---
sinal_integrado = cumulative_trapezoid(tensoes_volts_originais, tempos_segundos_originais, initial=0)
sinal_integrado = sinal_integrado + tensoes_volts_originais[0]

# --- Processamento dos novos dados ---
tempos_novos_ms, correntes_kA = [], []
for linha in novos_dados_brutos.strip().split('\n'):
    partes = linha.split(',')
    tempo_str = re.sub(r'[^0-9.]', '', partes[0])
    corrente_str = re.sub(r'[^0-9.]', '', partes[2])
    
    if tempo_str and corrente_str:
        tempos_novos_ms.append(float(tempo_str))
        correntes_kA.append(float(corrente_str))

tempos_novos_segundos = np.array(tempos_novos_ms) / 1000.0
correntes_kA_array = np.array(correntes_kA)

# --- Cálculo da Derivada da Corrente ---
derivada_corrente = np.diff(correntes_kA_array) / np.diff(tempos_novos_segundos)
derivada_corrente = np.insert(derivada_corrente, 0, 0)

# --- Integrar a Derivada da Corrente ---
corrente_reintegrada = cumulative_trapezoid(derivada_corrente, tempos_novos_segundos, initial=0)
corrente_reintegrada = corrente_reintegrada + correntes_kA_array[0]


# --- Geração do Gráfico Consolidado ---
fig, ax1 = plt.subplots(figsize=(14, 8))
fig.suptitle('Análise Completa de Sinais', fontsize=16)

# Plot da Leitura Original (Eixo 1, à esquerda)
ax1.set_xlabel("Tempo Decorrido (s)")
ax1.set_ylabel("Tensão Original (V)", color='red')
ax1.plot(tempos_segundos_originais, tensoes_volts_originais, color='red', alpha=0.6, label='Leitura Original (V)')
ax1.tick_params(axis='y', labelcolor='red')
ax1.grid(True)

# Plot da Leitura Integrada (Eixo 2, à direita)
ax2 = ax1.twinx()
# O rótulo agora reflete a soma, não tendo uma unidade clara
ax2.set_ylabel('Integral Ajustada (V·s + V0)', color='blue')
ax2.plot(tempos_segundos_originais, sinal_integrado, color='blue', linestyle='--', label='Integral Ajustada (V·s + V0)')
ax2.tick_params(axis='y', labelcolor='blue')

# Plot dos Novos Dados de Corrente e da sua Re-integração (Eixo 3, à direita)
ax3 = ax1.twinx()
ax3.spines['right'].set_position(('outward', 60))
ax3.set_ylabel('Corrente (kA)', color='green')
ax3.plot(tempos_novos_segundos, correntes_kA_array, color='green', linestyle=':', marker='x', markersize=4, label='Corrente Original (kA)')
ax3.plot(tempos_novos_segundos, corrente_reintegrada, color='orange', linestyle='-', linewidth=2, label='Corrente Re-integrada (kA)')
ax3.tick_params(axis='y', labelcolor='green')

# Plot da Derivada da Corrente (Eixo 4, à direita)
ax4 = ax1.twinx()
ax4.spines['right'].set_position(('outward', 120))
ax4.set_ylabel('Derivada (kA/s)', color='purple')
ax4.plot(tempos_novos_segundos, derivada_corrente, color='purple', linestyle='-.', label='Derivada da Corrente (kA/s)')
ax4.tick_params(axis='y', labelcolor='purple')

# Adiciona legendas
lines, labels = ax1.get_legend_handles_labels()
lines2, labels2 = ax2.get_legend_handles_labels()
lines3, labels3 = ax3.get_legend_handles_labels()
lines4, labels4 = ax4.get_legend_handles_labels()
ax4.legend(lines + lines2 + lines3 + lines4, labels + labels2 + labels3 + labels4, loc='best')

fig.tight_layout(rect=[0, 0, 0.85, 0.96])
plt.show()